{"version":3,"sources":["components/section/Section.js","components/section/feedbackOptions/FeedbackOptions.js","components/section/statistics/Statistics.js","components/section/notification/Notification.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","onLeaveFeedback","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","className","Notification","message","App","state","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAeeA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICeUC,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SC+BWI,EAvCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,wBAAIC,UAAU,kBACZ,wBAAIA,UAAU,kBACZ,uBAAGA,UAAU,iBAAb,QACO,0BAAMA,UAAU,kBAAkBL,KAG3C,wBAAIK,UAAU,kBACZ,uBAAGA,UAAU,iBAAb,WACU,0BAAMA,UAAU,kBAAkBJ,KAG9C,wBAAII,UAAU,kBACZ,uBAAGA,UAAU,iBAAb,OACM,0BAAMA,UAAU,kBAAkBH,KAG1C,wBAAIG,UAAU,kBACZ,uBAAGA,UAAU,iBAAb,SACQ,0BAAMA,UAAU,kBAAkBF,OAG5C,wBAAIE,UAAU,kBACZ,uBAAGA,UAAU,iBAAb,qBAEE,0BAAMA,UAAU,kBAAkBD,IAAlC,SCfOE,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oCACE,2BAAIA,KC2COC,E,4MAzCbC,MAAQ,CAAET,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCP,gBAAkB,SAAAe,GAChB,IAAMb,EAAOa,EAAEC,OAAOd,KACtB,EAAKe,UAAS,SAAAH,GAAK,sBAChBZ,EAAOY,EAAMZ,GAAQ,O,EAI1BgB,mBAAqB,WACnB,OAAO,EAAKJ,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAG3DY,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKP,MAAMT,KAAc,EAAKa,uB,uDAIjD,OACE,oCACE,kBAAC,EAAD,CAASrB,MAAM,yBACb,kBAAC,EAAD,CAAiBG,gBAAiBsB,KAAKtB,mBAEzC,kBAAC,EAAD,CAASH,MAAM,cACZyB,KAAKJ,qBACJ,kBAAC,EAAD,CACEb,KAAMiB,KAAKR,MAAMT,KACjBC,QAASgB,KAAKR,MAAMR,QACpBC,IAAKe,KAAKR,MAAMP,IAChBC,MAAOc,KAAKJ,mBACZT,mBAAoBa,KAAKH,kCAG3B,kBAAC,EAAD,CAAcP,QAAQ,4B,GAlChBW,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.dd908227.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <>\r\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className=\"statisticsList\">\r\n    <li className=\"statisticsItem\">\r\n      <p className=\"statisticName\">\r\n        Good:<span className=\"statisticValue\">{good}</span>\r\n      </p>\r\n    </li>\r\n    <li className=\"statisticsItem\">\r\n      <p className=\"statisticName\">\r\n        Neutral:<span className=\"statisticValue\">{neutral}</span>\r\n      </p>\r\n    </li>\r\n    <li className=\"statisticsItem\">\r\n      <p className=\"statisticName\">\r\n        Bad:<span className=\"statisticValue\">{bad}</span>\r\n      </p>\r\n    </li>\r\n    <li className=\"statisticsItem\">\r\n      <p className=\"statisticName\">\r\n        Total:<span className=\"statisticValue\">{total()}</span>\r\n      </p>\r\n    </li>\r\n    <li className=\"statisticsItem\">\r\n      <p className=\"statisticName\">\r\n        Positive feedback:\r\n        <span className=\"statisticValue\">{positivePercentage()}%</span>\r\n      </p>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport Section from './section/Section';\nimport FeedbackOptions from './section/feedbackOptions/FeedbackOptions';\nimport Statistics from './section/statistics/Statistics';\nimport Notification from './section/notification/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(state => ({\n      [name]: state[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}